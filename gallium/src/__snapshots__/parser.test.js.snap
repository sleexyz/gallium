// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse parses 0 1`] = `
NumLit {
  "payload": Object {},
  "type": "NumLit",
  "value": 0,
}
`;

exports[`parse parses VApp's 1`] = `
VApp {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "compose",
    },
    HApp {
      "children": Array [
        Name {
          "payload": Object {},
          "type": "Name",
          "value": "note",
        },
        NumLit {
          "payload": Object {},
          "type": "NumLit",
          "value": 1,
        },
      ],
      "payload": Object {},
      "spaces": Array [
        " ",
      ],
      "type": "HApp",
    },
  ],
  "extraSpaces": Array [
    "",
  ],
  "indent": 2,
  "payload": Object {},
  "type": "VApp",
}
`;

exports[`parse parses decimals 1`] = `
NumLit {
  "payload": Object {},
  "type": "NumLit",
  "value": 0.5,
}
`;

exports[`parse parses multiple levels of parens 1`] = `
Paren {
  "children": Array [
    Paren {
      "children": Array [
        NumLit {
          "payload": Object {},
          "type": "NumLit",
          "value": 1,
        },
      ],
      "payload": Object {},
      "spaces": Array [
        " ",
        " ",
      ],
      "type": "Paren",
    },
  ],
  "payload": Object {},
  "spaces": Array [
    " ",
    " ",
  ],
  "type": "Paren",
}
`;

exports[`parseParen parses unary lists 1`] = `
Paren {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "foo",
    },
  ],
  "payload": Object {},
  "spaces": Array [
    "",
    "",
  ],
  "type": "Paren",
}
`;

exports[`parseParen parses with application inside 1`] = `
Paren {
  "children": Array [
    HApp {
      "children": Array [
        Name {
          "payload": Object {},
          "type": "Name",
          "value": "foo",
        },
        NumLit {
          "payload": Object {},
          "type": "NumLit",
          "value": 1,
        },
        NumLit {
          "payload": Object {},
          "type": "NumLit",
          "value": 2,
        },
        NumLit {
          "payload": Object {},
          "type": "NumLit",
          "value": 1,
        },
      ],
      "payload": Object {},
      "spaces": Array [
        " ",
        " ",
        " ",
      ],
      "type": "HApp",
    },
  ],
  "payload": Object {},
  "spaces": Array [
    "",
    "",
  ],
  "type": "Paren",
}
`;

exports[`parseVApp parses indentation-based lists with one child 1`] = `
VApp {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "foo",
    },
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "bar",
    },
  ],
  "extraSpaces": Array [
    "",
  ],
  "indent": 2,
  "payload": Object {},
  "type": "VApp",
}
`;

exports[`parseVApp parses indentation-based lists with one child, with an extra new line 1`] = `
VApp {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "foo",
    },
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "bar",
    },
  ],
  "extraSpaces": Array [
    "
",
  ],
  "indent": 2,
  "payload": Object {},
  "type": "VApp",
}
`;

exports[`parseVApp parses indentation-based lists with one child, with two extra new lines 1`] = `
VApp {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "foo",
    },
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "bar",
    },
  ],
  "extraSpaces": Array [
    "

",
  ],
  "indent": 2,
  "payload": Object {},
  "type": "VApp",
}
`;

exports[`parseVApp parses nested indentation-based lists 1`] = `
VApp {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "foo",
    },
    VApp {
      "children": Array [
        Name {
          "payload": Object {},
          "type": "Name",
          "value": "bar",
        },
        Name {
          "payload": Object {},
          "type": "Name",
          "value": "baz",
        },
        NumLit {
          "payload": Object {},
          "type": "NumLit",
          "value": 1,
        },
      ],
      "extraSpaces": Array [
        "",
        "",
      ],
      "indent": 4,
      "payload": Object {},
      "type": "VApp",
    },
    NumLit {
      "payload": Object {},
      "type": "NumLit",
      "value": 2,
    },
  ],
  "extraSpaces": Array [
    "",
    "",
  ],
  "indent": 2,
  "payload": Object {},
  "type": "VApp",
}
`;

exports[`parseVApp parses super nested indentation-based lists 1`] = `
VApp {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "foo",
    },
    VApp {
      "children": Array [
        Name {
          "payload": Object {},
          "type": "Name",
          "value": "bar",
        },
        VApp {
          "children": Array [
            Name {
              "payload": Object {},
              "type": "Name",
              "value": "baz",
            },
            NumLit {
              "payload": Object {},
              "type": "NumLit",
              "value": 1,
            },
          ],
          "extraSpaces": Array [
            "",
          ],
          "indent": 6,
          "payload": Object {},
          "type": "VApp",
        },
      ],
      "extraSpaces": Array [
        "",
      ],
      "indent": 4,
      "payload": Object {},
      "type": "VApp",
    },
    NumLit {
      "payload": Object {},
      "type": "NumLit",
      "value": 2,
    },
  ],
  "extraSpaces": Array [
    "",
    "",
  ],
  "indent": 2,
  "payload": Object {},
  "type": "VApp",
}
`;

exports[`parseVApp parses super nested indentation-based lists, with weird indentation 1`] = `
VApp {
  "children": Array [
    Name {
      "payload": Object {},
      "type": "Name",
      "value": "foo",
    },
    VApp {
      "children": Array [
        Name {
          "payload": Object {},
          "type": "Name",
          "value": "bar",
        },
        VApp {
          "children": Array [
            Name {
              "payload": Object {},
              "type": "Name",
              "value": "baz",
            },
            NumLit {
              "payload": Object {},
              "type": "NumLit",
              "value": 1,
            },
            NumLit {
              "payload": Object {},
              "type": "NumLit",
              "value": 2,
            },
          ],
          "extraSpaces": Array [
            "",
            "",
          ],
          "indent": 10,
          "payload": Object {},
          "type": "VApp",
        },
      ],
      "extraSpaces": Array [
        "",
      ],
      "indent": 5,
      "payload": Object {},
      "type": "VApp",
    },
    NumLit {
      "payload": Object {},
      "type": "NumLit",
      "value": 2,
    },
  ],
  "extraSpaces": Array [
    "",
    "",
  ],
  "indent": 4,
  "payload": Object {},
  "type": "VApp",
}
`;
